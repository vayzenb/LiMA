if (cc == 'SF' | cc == 'View')  {
tempMean = (mean(tempMAT[[cl]][tempMAT$Skel=="Same"], na.rm = TRUE) +
mean(tempMAT[[cl]][tempMAT$Skel=="Diff"], na.rm = TRUE))/2
}else if (cc == "Skel") {
tempMean = (mean(tempMAT[[paste(cl, "_SF",sep="")]][tempMAT$SF=="Same"], na.rm = TRUE) +
mean(tempMAT[[paste(cl, "_SF",sep="")]][tempMAT$SF=="Diff"], na.rm = TRUE))/2
}
#tempMean = (mean(tempMAT[[cl]][tempMAT$Skel=="Same"], na.rm = TRUE) +
#             mean(tempMAT[[cl]][tempMAT$Skel=="Diff"], na.rm = TRUE))/2
CI = quantile(bootMat.model[[n]][mm,], probs = c(alpha/2, 1-alpha/2));
ModelSummary[ms,] = c(ModelType[mm], cl, cc, tempMean,CI[1],CI[2])
ms= ms +1
}
n= n + 1
}
}
colnames(ModelSummary) = c("Model", "Classifier", "Condition", "Acc", "CI_Low", "CI_High")
View(ModelSummary)
rm(list = ls())
library(ggplot2)
library(reshape2)
library(dplyr)
library(boot)
setwd('C:/Users/vayze/Desktop/GitHub_Repos/LiMA')
exp = c('Exp1', 'Exp2')
cond = c('View', 'SF', 'Skel')
ModelType= c('GBJ', 'GIST', 'FF_IN', 'R_IN', 'FF_SN', 'R_SN')
classifier = c("OCS", "ISOF")
ModelCols = c('Exp', 'Model', 'Obj1', 'Obj2', 'Skel', 'SF', 'trAcc_ocs', 'tsAcc_ocs','trAcc_isof', 'tsAcc_isof', "Cond")
sz = 20
iter = 10
alpha = .05
for (ee in 1:length(exp)){
#Load infant data
df.infant = read.table(paste("Infant_Data/Experiment_",ee,"_Infant_Data.csv", sep=""),header = TRUE, sep=",")
df.sf = read.table(paste("Results/LiMA_Exp", ee,"_allModels_OSL.csv", sep=""),header = FALSE, sep=",")
df.sf$Cond = "SF"
df = df.sf
colnames(df) = ModelCols
#This codes objects with same skel at 1 and objects with diff skels as 0
df$OCS = df$tsAcc_ocs
df$OCS[df$Skel == 'Diff'] = 1-df$OCS[df$Skel == 'Diff']
df$ISOF = df$tsAcc_isof
df$ISOF[df$Skel == 'Diff'] = 1-df$ISOF[df$Skel == 'Diff']
#This codes objects with same SF at 1 and objects with diff SFs as 0
df$OCS_SF = df$tsAcc_ocs
df$OCS_SF[df$SF == 'Diff'] = 1-df$OCS_SF[df$SF == 'Diff']
df$ISOF_SF = df$tsAcc_isof
df$ISOF_SF[df$SF == 'Diff'] = 1-df$ISOF_SF[df$SF == 'Diff']
#set up empty matrices for each condition (3) and classifier(2)  (the number of rows in matrix corresponds to the model)
bootMat.infant = matrix(0,1,iter)
bootMat.model = list(matrix(0,length(ModelType),iter), matrix(0,length(ModelType),iter),matrix(0,length(ModelType),iter),
matrix(0,length(ModelType),iter), matrix(0,length(ModelType),iter), matrix(0,length(ModelType),iter))
#Start boot test
for (ii in 1:iter){
#Sample with replacement for infants
tempInfant = sample_n(df.infant,nrow(df.infant), replace = TRUE)
novelDiff = mean(tempInfant$Novel) - mean(tempInfant$HabEnd)
famDiff = mean(tempInfant$Familiar) - mean(tempInfant$HabEnd)
if(novelDiff < 0){novelDiff = 0}
if(famDiff < 0){famDiff = 0}
bootMat.infant[1,ii] =  novelDiff / (novelDiff + famDiff)
n = 1
for (cl in classifier){
for (cc in cond){
for (mm in 1:length(ModelType)){
#Select appropriate data depending on condition
if(cc == 'View' ) {
tempMAT = df[df$Model == ModelType[mm] & df$SF == "Same" & df$Cond == "SF",]
}else if (cc == 'SF' )  {
tempMAT = df[df$Model == ModelType[mm] & df$SF == "Diff" & df$Cond == "SF",]
}else if (cc == "Skel") {
tempMAT = df[df$Model == ModelType[mm] & df$Skel == "Diff" & df$Cond == "SF",]
}
#Sample with replacement
tempMAT = sample_n(tempMAT,nrow(tempMAT), replace = TRUE)
#Add to appropriate matrix
if (cc == 'SF' | cc == 'View')  {
bootMat.model[[n]][mm,ii] = (mean(tempMAT[[cl]][tempMAT$Skel=="Same"], na.rm = TRUE) +
mean(tempMAT[[cl]][tempMAT$Skel=="Diff"], na.rm = TRUE))/2
}else if (cc == "Skel") {
bootMat.model[[n]][mm,ii] = (mean(tempMAT[[paste(cl, "_SF",sep="")]][tempMAT$SF=="Same"], na.rm = TRUE) +
mean(tempMAT[[paste(cl, "_SF",sep="")]][tempMAT$SF=="Diff"], na.rm = TRUE))/2
}
}
n= n +1
}
}
}
#Write to file
ModelSummary = matrix(0,length(bootMat.model)*length(ModelType) +1,6)
#This section comiles the summary data
novelDiff = mean(df.infant$Novel) - mean(df.infant$HabEnd)
famDiff = mean(df.infant$Familiar) - mean(df.infant$HabEnd)
CI = quantile(bootMat.infant, probs = c(alpha/2, 1-alpha/2));
ModelSummary[1,] = c("Infant", "Infant", "SF", novelDiff/(novelDiff + famDiff),CI[1],CI[2])
ms = 2
n=1
for (cl in classifier){
for (cc in cond){
for (mm in 1:length(ModelType)){
#Select appropriate data depending on condition
if(cc == 'View' ) {
tempMAT = df[df$Model == ModelType[mm] & df$SF == "Same" & df$Cond == "SF",]
}else if (cc == 'SF' )  {
tempMAT = df[df$Model == ModelType[mm] & df$SF == "Diff" & df$Cond == "SF",]
}else if (cc == "Skel") {
tempMAT = df[df$Model == ModelType[mm] & df$Skel == "Diff" & df$Cond == "SF",]
}
if (cc == 'SF' | cc == 'View')  {
tempMean = (mean(tempMAT[[cl]][tempMAT$Skel=="Same"], na.rm = TRUE) +
mean(tempMAT[[cl]][tempMAT$Skel=="Diff"], na.rm = TRUE))/2
}else if (cc == "Skel") {
tempMean = (mean(tempMAT[[paste(cl, "_SF",sep="")]][tempMAT$SF=="Same"], na.rm = TRUE) +
mean(tempMAT[[paste(cl, "_SF",sep="")]][tempMAT$SF=="Diff"], na.rm = TRUE))/2
}
#tempMean = (mean(tempMAT[[cl]][tempMAT$Skel=="Same"], na.rm = TRUE) +
#             mean(tempMAT[[cl]][tempMAT$Skel=="Diff"], na.rm = TRUE))/2
CI = quantile(bootMat.model[[n]][mm,], probs = c(alpha/2, 1-alpha/2));
ModelSummary[ms,] = c(ModelType[mm], cl, cc, tempMean,CI[1],CI[2])
ms= ms +1
}
n= n + 1
}
}
colnames(ModelSummary) = c("Model", "Classifier", "Condition", "Acc", "CI_Low", "CI_High")
assign(paste(exp[ee], '.Models', sep=""), ModelSummary)
}
rm(list = ls())
library(ggplot2)
library(reshape2)
library(dplyr)
library(boot)
setwd('C:/Users/vayze/Desktop/GitHub_Repos/LiMA')
exp = c('Exp1', 'Exp2')
cond = c('View', 'SF', 'Skel')
ModelType= c('GBJ', 'GIST', 'FF_IN', 'R_IN', 'FF_SN', 'R_SN')
classifier = c("OCS", "ISOF")
ModelCols = c('Exp', 'Model', 'Obj1', 'Obj2', 'Skel', 'SF', 'trAcc_ocs', 'tsAcc_ocs','trAcc_isof', 'tsAcc_isof', "Cond")
sz = 20
iter = 10
alpha = .05
for (ee in 1:length(exp)){
#Load infant data
df.infant = read.table(paste("Infant_Data/Experiment_",ee,"_Infant_Data.csv", sep=""),header = TRUE, sep=",")
df.sf = read.table(paste("Results/LiMA_Exp", ee,"_allModels_OSL.csv", sep=""),header = FALSE, sep=",")
df.sf$Cond = "SF"
df = df.sf
colnames(df) = ModelCols
#This codes objects with same skel at 1 and objects with diff skels as 0
df$OCS = df$tsAcc_ocs
df$OCS[df$Skel == 'Diff'] = 1-df$OCS[df$Skel == 'Diff']
df$ISOF = df$tsAcc_isof
df$ISOF[df$Skel == 'Diff'] = 1-df$ISOF[df$Skel == 'Diff']
#This codes objects with same SF at 1 and objects with diff SFs as 0
df$OCS_SF = df$tsAcc_ocs
df$OCS_SF[df$SF == 'Diff'] = 1-df$OCS_SF[df$SF == 'Diff']
df$ISOF_SF = df$tsAcc_isof
df$ISOF_SF[df$SF == 'Diff'] = 1-df$ISOF_SF[df$SF == 'Diff']
#set up empty matrices for each condition (3) and classifier(2)  (the number of rows in matrix corresponds to the model)
bootMat.infant = matrix(0,1,iter)
bootMat.model = list(matrix(0,length(ModelType),iter), matrix(0,length(ModelType),iter),matrix(0,length(ModelType),iter),
matrix(0,length(ModelType),iter), matrix(0,length(ModelType),iter), matrix(0,length(ModelType),iter))
#Start boot test
for (ii in 1:iter){
#Sample with replacement for infants
tempInfant = sample_n(df.infant,nrow(df.infant), replace = TRUE)
novelDiff = mean(tempInfant$Novel) - mean(tempInfant$HabEnd)
famDiff = mean(tempInfant$Familiar) - mean(tempInfant$HabEnd)
if(novelDiff < 0){novelDiff = 0}
if(famDiff < 0){famDiff = 0}
bootMat.infant[1,ii] =  novelDiff / (novelDiff + famDiff)
n = 1
for (cl in classifier){
for (cc in cond){
for (mm in 1:length(ModelType)){
#Select appropriate data depending on condition
if(cc == 'View' ) {
tempMAT = df[df$Model == ModelType[mm] & df$SF == "Same" & df$Cond == "SF",]
}else if (cc == 'SF' )  {
tempMAT = df[df$Model == ModelType[mm] & df$SF == "Diff" & df$Cond == "SF",]
}else if (cc == "Skel") {
tempMAT = df[df$Model == ModelType[mm] & df$Skel == "Diff" & df$Cond == "SF",]
}
#Sample with replacement
tempMAT = sample_n(tempMAT,nrow(tempMAT), replace = TRUE)
#Add to appropriate matrix
if (cc == 'SF' | cc == 'View')  {
bootMat.model[[n]][mm,ii] = (mean(tempMAT[[cl]][tempMAT$Skel=="Same"], na.rm = TRUE) +
mean(tempMAT[[cl]][tempMAT$Skel=="Diff"], na.rm = TRUE))/2
}else if (cc == "Skel") {
bootMat.model[[n]][mm,ii] = (mean(tempMAT[[paste(cl, "_SF",sep="")]][tempMAT$SF=="Same"], na.rm = TRUE) +
mean(tempMAT[[paste(cl, "_SF",sep="")]][tempMAT$SF=="Diff"], na.rm = TRUE))/2
}
}
n= n +1
}
}
}
#Write to file
ModelSummary = matrix(0,length(bootMat.model)*length(ModelType) +1,6)
#This section comiles the summary data
novelDiff = mean(df.infant$Novel) - mean(df.infant$HabEnd)
famDiff = mean(df.infant$Familiar) - mean(df.infant$HabEnd)
CI = quantile(bootMat.infant, probs = c(alpha/2, 1-alpha/2));
ModelSummary[1,] = c("Infant", "Infant", "SF", novelDiff/(novelDiff + famDiff),CI[1],CI[2])
ms = 2
n=1
for (cl in classifier){
for (cc in cond){
for (mm in 1:length(ModelType)){
#Select appropriate data depending on condition
if(cc == 'View' ) {
tempMAT = df[df$Model == ModelType[mm] & df$SF == "Same" & df$Cond == "SF",]
}else if (cc == 'SF' )  {
tempMAT = df[df$Model == ModelType[mm] & df$SF == "Diff" & df$Cond == "SF",]
}else if (cc == "Skel") {
tempMAT = df[df$Model == ModelType[mm] & df$Skel == "Diff" & df$Cond == "SF",]
}
if (cc == 'SF' | cc == 'View')  {
tempMean = (mean(tempMAT[[cl]][tempMAT$Skel=="Same"], na.rm = TRUE) +
mean(tempMAT[[cl]][tempMAT$Skel=="Diff"], na.rm = TRUE))/2
}else if (cc == "Skel") {
tempMean = (mean(tempMAT[[paste(cl, "_SF",sep="")]][tempMAT$SF=="Same"], na.rm = TRUE) +
mean(tempMAT[[paste(cl, "_SF",sep="")]][tempMAT$SF=="Diff"], na.rm = TRUE))/2
}
#tempMean = (mean(tempMAT[[cl]][tempMAT$Skel=="Same"], na.rm = TRUE) +
#             mean(tempMAT[[cl]][tempMAT$Skel=="Diff"], na.rm = TRUE))/2
CI = quantile(bootMat.model[[n]][mm,], probs = c(alpha/2, 1-alpha/2));
ModelSummary[ms,] = c(ModelType[mm], cl, cc, tempMean,CI[1],CI[2])
ms= ms +1
}
n= n + 1
}
}
colnames(ModelSummary) = c("Model", "Classifier", "Condition", "Acc", "CI_Low", "CI_High")
assign(paste(exp[ee], '.Models', sep=""), ModelSummary)
}
save(Exp1.Models, Exp2.Models, file="Infant_Data/LiMA_Model_Data.RData")
ee = 2
#Load infant data
df.infant = read.table(paste("Infant_Data/Experiment_",ee,"_Infant_Data.csv", sep=""),header = TRUE, sep=",")
setwd('C:/Users/vayze/Desktop/GitHub_Repos/LiMA')
#Load infant data
df.infant = read.table(paste("Infant_Data/Experiment_",ee,"_Infant_Data.csv", sep=""),header = TRUE, sep=",")
"Experiment_2_Infant_Data.csv"
paste("Infant_Data/Experiment_",ee,"_Infant_Data.csv", sep="")
"Infant_Data/Experiment_2_Infant_Data.csv"
paste("Infant_Data/Experiment_",ee,"_Infant_Data.csv", sep="")
#Load infant data
df.infant = read.table(paste("Infant_Data/Experiment_",ee,"_Infant_Data.csv", sep=""),header = TRUE, sep=",")
ee = 1
#Load infant data
df.infant = read.table(paste("Infant_Data/Experiment_",ee,"_Infant_Data.csv", sep=""),header = TRUE, sep=",")
rm(list = ls())
library(ggplot2)
library(reshape2)
library(dplyr)
library(boot)
setwd('C:/Users/vayze/Desktop/GitHub_Repos/LiMA')
exp = c('Exp1', 'Exp2')
cond = c('View', 'SF', 'Skel')
ModelType= c('GBJ', 'GIST', 'FF_IN', 'R_IN', 'FF_SN', 'R_SN')
classifier = c("OCS", "ISOF")
ModelCols = c('Exp', 'Model', 'Obj1', 'Obj2', 'Skel', 'SF', 'trAcc_ocs', 'tsAcc_ocs','trAcc_isof', 'tsAcc_isof', "Cond")
sz = 20
iter = 10
alpha = .05
for (ee in 1:length(exp)){
#Load infant data
df.infant = read.table(paste("Infant_Data/Experiment_",ee,"_Infant_Data.csv", sep=""),header = TRUE, sep=",")
df.sf = read.table(paste("Results/LiMA_Exp", ee,"_allModels_OSL.csv", sep=""),header = FALSE, sep=",")
df.sf$Cond = "SF"
df = df.sf
colnames(df) = ModelCols
#This codes objects with same skel at 1 and objects with diff skels as 0
df$OCS = df$tsAcc_ocs
df$OCS[df$Skel == 'Diff'] = 1-df$OCS[df$Skel == 'Diff']
df$ISOF = df$tsAcc_isof
df$ISOF[df$Skel == 'Diff'] = 1-df$ISOF[df$Skel == 'Diff']
#This codes objects with same SF at 1 and objects with diff SFs as 0
df$OCS_SF = df$tsAcc_ocs
df$OCS_SF[df$SF == 'Diff'] = 1-df$OCS_SF[df$SF == 'Diff']
df$ISOF_SF = df$tsAcc_isof
df$ISOF_SF[df$SF == 'Diff'] = 1-df$ISOF_SF[df$SF == 'Diff']
#set up empty matrices for each condition (3) and classifier(2)  (the number of rows in matrix corresponds to the model)
bootMat.infant = matrix(0,1,iter)
bootMat.model = list(matrix(0,length(ModelType),iter), matrix(0,length(ModelType),iter),matrix(0,length(ModelType),iter),
matrix(0,length(ModelType),iter), matrix(0,length(ModelType),iter), matrix(0,length(ModelType),iter))
#Start boot test
for (ii in 1:iter){
#Sample with replacement for infants
tempInfant = sample_n(df.infant,nrow(df.infant), replace = TRUE)
novelDiff = mean(tempInfant$Novel) - mean(tempInfant$HabEnd)
famDiff = mean(tempInfant$Familiar) - mean(tempInfant$HabEnd)
if(novelDiff < 0){novelDiff = 0}
if(famDiff < 0){famDiff = 0}
bootMat.infant[1,ii] =  novelDiff / (novelDiff + famDiff)
n = 1
for (cl in classifier){
for (cc in cond){
for (mm in 1:length(ModelType)){
#Select appropriate data depending on condition
if(cc == 'View' ) {
tempMAT = df[df$Model == ModelType[mm] & df$SF == "Same" & df$Cond == "SF",]
}else if (cc == 'SF' )  {
tempMAT = df[df$Model == ModelType[mm] & df$SF == "Diff" & df$Cond == "SF",]
}else if (cc == "Skel") {
tempMAT = df[df$Model == ModelType[mm] & df$Skel == "Diff" & df$Cond == "SF",]
}
#Sample with replacement
tempMAT = sample_n(tempMAT,nrow(tempMAT), replace = TRUE)
#Add to appropriate matrix
if (cc == 'SF' | cc == 'View')  {
bootMat.model[[n]][mm,ii] = (mean(tempMAT[[cl]][tempMAT$Skel=="Same"], na.rm = TRUE) +
mean(tempMAT[[cl]][tempMAT$Skel=="Diff"], na.rm = TRUE))/2
}else if (cc == "Skel") {
bootMat.model[[n]][mm,ii] = (mean(tempMAT[[paste(cl, "_SF",sep="")]][tempMAT$SF=="Same"], na.rm = TRUE) +
mean(tempMAT[[paste(cl, "_SF",sep="")]][tempMAT$SF=="Diff"], na.rm = TRUE))/2
}
}
n= n +1
}
}
}
#Write to file
ModelSummary = matrix(0,length(bootMat.model)*length(ModelType) +1,6)
#This section comiles the summary data
novelDiff = mean(df.infant$Novel) - mean(df.infant$HabEnd)
famDiff = mean(df.infant$Familiar) - mean(df.infant$HabEnd)
CI = quantile(bootMat.infant, probs = c(alpha/2, 1-alpha/2));
ModelSummary[1,] = c("Infant", "Infant", "SF", novelDiff/(novelDiff + famDiff),CI[1],CI[2])
ms = 2
n=1
for (cl in classifier){
for (cc in cond){
for (mm in 1:length(ModelType)){
#Select appropriate data depending on condition
if(cc == 'View' ) {
tempMAT = df[df$Model == ModelType[mm] & df$SF == "Same" & df$Cond == "SF",]
}else if (cc == 'SF' )  {
tempMAT = df[df$Model == ModelType[mm] & df$SF == "Diff" & df$Cond == "SF",]
}else if (cc == "Skel") {
tempMAT = df[df$Model == ModelType[mm] & df$Skel == "Diff" & df$Cond == "SF",]
}
if (cc == 'SF' | cc == 'View')  {
tempMean = (mean(tempMAT[[cl]][tempMAT$Skel=="Same"], na.rm = TRUE) +
mean(tempMAT[[cl]][tempMAT$Skel=="Diff"], na.rm = TRUE))/2
}else if (cc == "Skel") {
tempMean = (mean(tempMAT[[paste(cl, "_SF",sep="")]][tempMAT$SF=="Same"], na.rm = TRUE) +
mean(tempMAT[[paste(cl, "_SF",sep="")]][tempMAT$SF=="Diff"], na.rm = TRUE))/2
}
#tempMean = (mean(tempMAT[[cl]][tempMAT$Skel=="Same"], na.rm = TRUE) +
#             mean(tempMAT[[cl]][tempMAT$Skel=="Diff"], na.rm = TRUE))/2
CI = quantile(bootMat.model[[n]][mm,], probs = c(alpha/2, 1-alpha/2));
ModelSummary[ms,] = c(ModelType[mm], cl, cc, tempMean,CI[1],CI[2])
ms= ms +1
}
n= n + 1
}
}
colnames(ModelSummary) = c("Model", "Classifier", "Condition", "Acc", "CI_Low", "CI_High")
assign(paste(exp[ee], '.Models', sep=""), ModelSummary)
}
View(Exp1.Models)
View(Exp2.Models)
rm(list = ls())
library(ggplot2)
library(reshape2)
setwd('C:/Users/vayze/Desktop/GitHub_Repos/LiMA')
load('Infant_Data/LiMA_Model_Data_Size.RData')
load('Infant_Data/LiMA_Model_Data.RData')
load('Infant_Data/LiMA_Model_Data_MultiItem.RData')
exp = c('Exp1', 'Exp2')
classifier = c("OCS", "ISOF")
ModelType= c('Infant', 'FF_IN', 'R_IN', 'FF_SN', 'R_SN')
ActualName= c('Infants', 'AlexNet-IN', 'ResNet-IN', 'AlexNet-SIN', 'ResNet-SIN')
for (mm in 1:length(ModelType)){
Exp1.Models[,1][Exp1.Models[,1] == ModelType[mm]] = ActualName[mm]
Exp2.Models[,1][Exp2.Models[,1] == ModelType[mm]] = ActualName[mm]
Exp1.Models_MSL[,1][Exp1.Models_MSL[,1] == ModelType[mm]] = ActualName[mm]
Exp2.Models_MSL[,1][Exp2.Models_MSL[,1] == ModelType[mm]] = ActualName[mm]
Exp1.Models_Size[,1][Exp1.Models_Size[,1] == ModelType[mm]] = ActualName[mm]
Exp2.Models_Size[,1][Exp2.Models_Size[,1] == ModelType[mm]] = ActualName[mm]
}
sLine = .7
sAx = 8
sTitle = 10
sPlot = 2.5
ModelCols = c('#39a055', '#8ccf8a', '#c81b1d', '#ec3f2f', '#fa7051', '#fc9e80')
rm(list = ls())
library(ggplot2)
library(reshape2)
setwd('C:/Users/vayze/Desktop/GitHub_Repos/LiMA')
load('Infant_Data/LiMA_Model_Data_Size.RData')
load('Infant_Data/LiMA_Model_Data.RData')
load('Infant_Data/LiMA_Model_Data_MultiItem.RData')
exp = c('Exp1', 'Exp2')
classifier = c("OCS", "ISOF")
ModelType= c('Infant', 'FF_IN', 'R_IN', 'FF_SN', 'R_SN')
ActualName= c('Infants', 'AlexNet-IN', 'ResNet-IN', 'AlexNet-SIN', 'ResNet-SIN')
rm(list = ls())
library(ggplot2)
library(reshape2)
library(dplyr)
library(boot)
setwd('C:/Users/vayze/Desktop/GitHub_Repos/LiMA')
exp = c('Exp1', 'Exp2')
cond = c('View', 'SF', 'Skel')
ModelType= c('GBJ', 'GIST', 'FF_IN', 'R_IN', 'FF_SN', 'R_SN')
classifier = c("OCS", "ISOF")
ModelCols = c('Exp', 'Model', 'Obj1', 'Obj2', 'Skel', 'SF', 'trAcc_ocs', 'tsAcc_ocs','trAcc_isof', 'tsAcc_isof', "Cond")
sz = 20
iter = 10000
alpha = .05
for (ee in 1:length(exp)){
#Load infant data
df.infant = read.table(paste("Infant_Data/Experiment_",ee,"_Infant_Data.csv", sep=""),header = TRUE, sep=",")
df.sf = read.table(paste("Results/LiMA_Exp", ee,"_allModels_OSL.csv", sep=""),header = FALSE, sep=",")
df.sf$Cond = "SF"
df = df.sf
colnames(df) = ModelCols
#This codes objects with same skel at 1 and objects with diff skels as 0
df$OCS = df$tsAcc_ocs
df$OCS[df$Skel == 'Diff'] = 1-df$OCS[df$Skel == 'Diff']
df$ISOF = df$tsAcc_isof
df$ISOF[df$Skel == 'Diff'] = 1-df$ISOF[df$Skel == 'Diff']
#This codes objects with same SF at 1 and objects with diff SFs as 0
df$OCS_SF = df$tsAcc_ocs
df$OCS_SF[df$SF == 'Diff'] = 1-df$OCS_SF[df$SF == 'Diff']
df$ISOF_SF = df$tsAcc_isof
df$ISOF_SF[df$SF == 'Diff'] = 1-df$ISOF_SF[df$SF == 'Diff']
#set up empty matrices for each condition (3) and classifier(2)  (the number of rows in matrix corresponds to the model)
bootMat.infant = matrix(0,1,iter)
bootMat.model = list(matrix(0,length(ModelType),iter), matrix(0,length(ModelType),iter),matrix(0,length(ModelType),iter),
matrix(0,length(ModelType),iter), matrix(0,length(ModelType),iter), matrix(0,length(ModelType),iter))
#Start boot test
for (ii in 1:iter){
#Sample with replacement for infants
tempInfant = sample_n(df.infant,nrow(df.infant), replace = TRUE)
novelDiff = mean(tempInfant$Novel) - mean(tempInfant$HabEnd)
famDiff = mean(tempInfant$Familiar) - mean(tempInfant$HabEnd)
if(novelDiff < 0){novelDiff = 0}
if(famDiff < 0){famDiff = 0}
bootMat.infant[1,ii] =  novelDiff / (novelDiff + famDiff)
n = 1
for (cl in classifier){
for (cc in cond){
for (mm in 1:length(ModelType)){
#Select appropriate data depending on condition
if(cc == 'View' ) {
tempMAT = df[df$Model == ModelType[mm] & df$SF == "Same" & df$Cond == "SF",]
}else if (cc == 'SF' )  {
tempMAT = df[df$Model == ModelType[mm] & df$SF == "Diff" & df$Cond == "SF",]
}else if (cc == "Skel") {
tempMAT = df[df$Model == ModelType[mm] & df$Skel == "Diff" & df$Cond == "SF",]
}
#Sample with replacement
tempMAT = sample_n(tempMAT,nrow(tempMAT), replace = TRUE)
#Add to appropriate matrix
if (cc == 'SF' | cc == 'View')  {
bootMat.model[[n]][mm,ii] = (mean(tempMAT[[cl]][tempMAT$Skel=="Same"], na.rm = TRUE) +
mean(tempMAT[[cl]][tempMAT$Skel=="Diff"], na.rm = TRUE))/2
}else if (cc == "Skel") {
bootMat.model[[n]][mm,ii] = (mean(tempMAT[[paste(cl, "_SF",sep="")]][tempMAT$SF=="Same"], na.rm = TRUE) +
mean(tempMAT[[paste(cl, "_SF",sep="")]][tempMAT$SF=="Diff"], na.rm = TRUE))/2
}
}
n= n +1
}
}
}
#Write to file
ModelSummary = matrix(0,length(bootMat.model)*length(ModelType) +1,6)
#This section comiles the summary data
novelDiff = mean(df.infant$Novel) - mean(df.infant$HabEnd)
famDiff = mean(df.infant$Familiar) - mean(df.infant$HabEnd)
CI = quantile(bootMat.infant, probs = c(alpha/2, 1-alpha/2));
ModelSummary[1,] = c("Infant", "Infant", "SF", novelDiff/(novelDiff + famDiff),CI[1],CI[2])
ms = 2
n=1
for (cl in classifier){
for (cc in cond){
for (mm in 1:length(ModelType)){
#Select appropriate data depending on condition
if(cc == 'View' ) {
tempMAT = df[df$Model == ModelType[mm] & df$SF == "Same" & df$Cond == "SF",]
}else if (cc == 'SF' )  {
tempMAT = df[df$Model == ModelType[mm] & df$SF == "Diff" & df$Cond == "SF",]
}else if (cc == "Skel") {
tempMAT = df[df$Model == ModelType[mm] & df$Skel == "Diff" & df$Cond == "SF",]
}
if (cc == 'SF' | cc == 'View')  {
tempMean = (mean(tempMAT[[cl]][tempMAT$Skel=="Same"], na.rm = TRUE) +
mean(tempMAT[[cl]][tempMAT$Skel=="Diff"], na.rm = TRUE))/2
}else if (cc == "Skel") {
tempMean = (mean(tempMAT[[paste(cl, "_SF",sep="")]][tempMAT$SF=="Same"], na.rm = TRUE) +
mean(tempMAT[[paste(cl, "_SF",sep="")]][tempMAT$SF=="Diff"], na.rm = TRUE))/2
}
#tempMean = (mean(tempMAT[[cl]][tempMAT$Skel=="Same"], na.rm = TRUE) +
#             mean(tempMAT[[cl]][tempMAT$Skel=="Diff"], na.rm = TRUE))/2
CI = quantile(bootMat.model[[n]][mm,], probs = c(alpha/2, 1-alpha/2));
ModelSummary[ms,] = c(ModelType[mm], cl, cc, tempMean,CI[1],CI[2])
ms= ms +1
}
n= n + 1
}
}
colnames(ModelSummary) = c("Model", "Classifier", "Condition", "Acc", "CI_Low", "CI_High")
assign(paste(exp[ee], '.Models', sep=""), ModelSummary)
}
save(Exp1.Models, Exp2.Models, file="Infant_Data/LiMA_Model_Data.RData")
