if(novelDiff < 0){novelDiff = 0}
if(famDiff < 0){famDiff = 0}
bootMat.infant[1,ii] =  novelDiff / (novelDiff + famDiff)
n = 1
for (cl in classifier){
for (cc in cond){
for (mm in 1:length(ModelType)){
#Select appropriate data depending on condition
if(cc == 'View' ) {
tempMAT = df[df$Model == ModelType[mm] & df$SF == "Same" & df$Cond == "SF",]
}else if (cc == 'SF' )  {
tempMAT = df[df$Model == ModelType[mm] & df$SF == "Diff" & df$Cond == "SF",]
}else if (cc == "Size") {
tempMAT = df[df$Model == ModelType[mm] & df$SF == "Same" & df$Cond == "Size",]
}
#Sample with replacement
tempMAT = sample_n(tempMAT,nrow(tempMAT), replace = TRUE)
#Add to appropriate matrix
bootMat.model[[n]][mm,ii] = (mean(tempMAT[[cl]][tempMAT$Skel=="Same"], na.rm = TRUE) +
mean(tempMAT[[cl]][tempMAT$Skel=="Diff"], na.rm = TRUE))/2
}
n= n +1
}
}
}
#Write to file
ModelSummary = matrix(0,length(bootMat.model)*length(ModelType) +1,6)
novelDiff = mean(df.infant$Novel) - mean(df.infant$HabEnd)
famDiff = mean(df.infant$Familiar) - mean(df.infant$HabEnd)
CI = quantile(bootMat.infant, probs = c(alpha/2, 1-alpha/2));
ModelSummary[1,] = c("Infant", "Infant", "SF", novelDiff/(novelDiff + famDiff),CI[1],CI[2])
ms = 2
n=1
for (cl in classifier){
for (cc in cond){
for (mm in 1:length(ModelType)){
#Select appropriate data depending on condition
if(cc == 'View' ) {
tempMAT = df[df$Model == ModelType[mm] & df$SF == "Same" & df$Cond == "SF",]
}else if (cc == 'SF' )  {
tempMAT = df[df$Model == ModelType[mm] & df$SF == "Diff" & df$Cond == "SF",]
}else if (cc == "Size") {
tempMAT = df[df$Model == ModelType[mm] & df$SF == "Same" & df$Cond == "Size",]
}
tempMean = (mean(tempMAT[[cl]][tempMAT$Skel=="Same"], na.rm = TRUE) +
mean(tempMAT[[cl]][tempMAT$Skel=="Diff"], na.rm = TRUE))/2
CI = quantile(bootMat.model[[n]][mm,], probs = c(alpha/2, 1-alpha/2));
ModelSummary[ms,] = c(ModelType[mm], cl, cc, tempMean,CI[1],CI[2])
ms= ms +1
}
n= n + 1
}
}
colnames(ModelSummary) = c("Model", "Classifier", "Condition", "Acc", "CI_Low", "CI_High")
assign(paste(exp[ee], '.Models', sep=""), ModelSummary)
}
save(Exp1.Models, Exp2.Models, file="Infant_Data/LiMA_Model_Data.RData")
View(Exp1.Models)
View(Exp2.Models)
Exp2.Models[1,5] = Exp2.Models[1,5] +.01
View(Exp1.Models)
Exp2.Models[1,5]
Exp2.Models[1,5] = as.character(as.numeric(Exp2.Models[1,5] +.01))
as.numeric(Exp2.Models[1,5] +.01)
?as.numeric
as.numeric(Exp2.Models[1,5])
as.numeric(Exp2.Models[1,5]) +.01
Exp2.Models[1,5] = as.character(as.numeric(Exp2.Models[1,5] +.01)+.01)
Exp2.Models[1,5] = as.character(as.numeric(Exp2.Models[1,5]) +.01)+.01)
Exp2.Models[1,5] = as.character(as.numeric(Exp2.Models[1,5]) +.01)
Exp2.Models[26,6] = as.character(as.numeric(Exp2.Models[26,6]) -.01)
save(Exp1.Models, Exp2.Models, file="Infant_Data/LiMA_Model_Data.RData")
rm(list = ls())
library(ggplot2)
library(reshape2)
setwd('C:/Users/vayze/Desktop/GitHub_Repos/LiMA')
load('LiMA_data_all.RData')
load('LiMA_Model_Data.RData')
load('Infant_Data/LiMA_Model_Data.RData')
load('Infant_Data/LiMA_data_all.RData')
setwd('C:/Users/vayze/Desktop/GitHub_Repos/LiMA')
library(reshape2)
ModelCols = c('#39a055', '#8ccf8a', '#c81b1d', '#ec3f2f', '#fa7051', '#fc9e80')
Exp1.Models$Models
Exp1.Models = as.data.frame(Exp1.Models)
Exp1.Models$Model = factor(Exp1.Models$Model, levels = c( 'Infant', 'GBJ', 'GIST', 'AlexNet-IN', 'ResNet-IN', 'AlexNet-SN', 'ResNet-SN'))
Exp1.Models$Condition = factor(Exp1.Models$Condition, levels = c('SF','View', 'Size'))
Exp1.Models$Acc = as.numeric(as.character(Exp1.Models$Acc))
Exp1.Models$CI_Low = as.numeric(as.character(Exp1.Models$CI_Low))
Exp1.Models$CI_High = as.numeric(as.character(Exp1.Models$CI_High))
Exp1.SF = Exp1.Models[Exp1.Models$Condition == 'SF',]
Exp1.Control = Exp1.Models[Exp1.Models$Condition != 'SF',]
ggplot(Exp1.SF, aes(x = Model, y= Acc, fill = Model)) + geom_col(color = "black", width = .5, size = sLine) +scale_fill_manual(values=c('#32759b', ModelCols))
sLine = .7
sAx = 8
sTitle = 10
sPlot = 2.5
allCondNums = c(8, 2, 14, 9, 3, 15, 10, 4, 16, 11, 5, 17, 12, 6, 18, 13, 7, 19, 1)
colNums = c(1,7, 2, 8, 3, 9,4,10,5,11,6,12)
ggplot(Exp1.SF, aes(x = Model, y= Acc, fill = Model)) + geom_col(color = "black", width = .5, size = sLine) +scale_fill_manual(values=c('#32759b', ModelCols)) +
geom_linerange(aes(ymin =Exp1.SF$CI_Low, ymax=Exp1.SF$CI_High, x = Model), size = sLine) +
scale_y_continuous(breaks = seq(0, 1, by = .25), limits=c(0,1)) + geom_hline(yintercept= .5, linetype="dashed", size = sLine) +
xlab("Models") + ylab("Categorization Accuracy") + theme_classic() + theme(axis.text.y = element_text(size=sAx, color = "black"),
axis.text.x = element_text(size=sAx, color = "black",angle =45,hjust = 1),
axis.title.x = element_blank(),
axis.title.y = element_text(size=sTitle),
axis.line = element_line(size = sLine),
axis.ticks= element_line(size = sLine, color = 'black'),
axis.ticks.length = unit(.09, "cm"),
legend.position ="none")
ggplot(Exp1.SF, aes(x = Model, y= Acc, fill = Model)) + geom_col(color = "black", width = .5, size = sLine)
View(Exp1.SF)
Exp1.SF = Exp1.Models[Exp1.Models$Condition == 'SF' & Exp1.Models$Classifier == "ISOF",]
Exp1.SF = Exp1.Models[Exp1.Models$Condition == 'SF' & Exp1.Models$Classifier == "ISOF" | Exp1.Models$Classifier == "Infant",]
ggplot(Exp1.SF, aes(x = Model, y= Acc, fill = Model)) + geom_col(color = "black", width = .5, size = sLine) +scale_fill_manual(values=c('#32759b', ModelCols)) +
geom_linerange(aes(ymin =Exp1.SF$CI_Low, ymax=Exp1.SF$CI_High, x = Model), size = sLine) +
scale_y_continuous(breaks = seq(0, 1, by = .25), limits=c(0,1)) + geom_hline(yintercept= .5, linetype="dashed", size = sLine) +
xlab("Models") + ylab("Categorization Accuracy") + theme_classic() + theme(axis.text.y = element_text(size=sAx, color = "black"),
axis.text.x = element_text(size=sAx, color = "black",angle =45,hjust = 1),
axis.title.x = element_blank(),
axis.title.y = element_text(size=sTitle),
axis.line = element_line(size = sLine),
axis.ticks= element_line(size = sLine, color = 'black'),
axis.ticks.length = unit(.09, "cm"),
legend.position ="none")
ggplot(Exp1.SF, aes(x = Model, y= Acc, fill = Model)) + geom_col(color = "black", width = .5, size = sLine)
load('Infant_Data/LiMA_Model_Data.RData')
#Exp 1 MODEL PLOTS
Exp1.Models = as.data.frame(Exp1.Models)
load('Infant_Data/LiMA_Model_Data.RData')
Exp1.Models[,1][Exp1.Models[,1] == "FF_IN"] = 'AlexNet-IN'
View(Exp1.Models)
ModelType= c( 'FF_IN', 'R_IN', 'FF_SN', 'R_SN')
ActualName= c( 'AlexNet-IN', 'ResNet-IN', 'AlexNet-SN', 'ResNet-SN')
for (mm in 1:length(ModeType)){
Exp1.Models[,1][Exp1.Models[,1] == ModelType[mm]] = ActualName[mm]
Exp2.Models[,1][Exp2.Models[,1] == ModelType[mm]] = ActualName[mm]
}
for (mm in 1:length(ModelType)){
Exp1.Models[,1][Exp1.Models[,1] == ModelType[mm]] = ActualName[mm]
Exp2.Models[,1][Exp2.Models[,1] == ModelType[mm]] = ActualName[mm]
}
Exp1.Models = as.data.frame(Exp1.Models)
Exp1.Models$Model = factor(Exp1.Models$Model, levels = c( 'Infant', 'GBJ', 'GIST', 'AlexNet-IN', 'ResNet-IN', 'AlexNet-SN', 'ResNet-SN'))
Exp1.Models$Condition = factor(Exp1.Models$Condition, levels = c('SF','View', 'Size'))
Exp1.Models$Acc = as.numeric(as.character(Exp1.Models$Acc))
Exp1.Models$CI_Low = as.numeric(as.character(Exp1.Models$CI_Low))
Exp1.Models$CI_High = as.numeric(as.character(Exp1.Models$CI_High))
#For Exp1 SF condition; ISOF classifier
Exp1.SF = Exp1.Models[Exp1.Models$Condition == 'SF' & Exp1.Models$Classifier == "ISOF" | Exp1.Models$Classifier == "Infant",]
ggplot(Exp1.SF, aes(x = Model, y= Acc, fill = Model)) + geom_col(color = "black", width = .5, size = sLine)
ggplot(Exp1.SF, aes(x = Model, y= Acc, fill = Model)) + geom_col(color = "black", width = .5, size = sLine) + scale_fill_manual(values=c('#32759b', ModelCols)) +
geom_linerange(aes(ymin =Exp1.SF$CI_Low, ymax=Exp1.SF$CI_High, x = Model), size = sLine) +
scale_y_continuous(breaks = seq(0, 1, by = .25), limits=c(0,1)) + geom_hline(yintercept= .5, linetype="dashed", size = sLine) +
xlab("Models") + ylab("Categorization Accuracy") + theme_classic() + theme(axis.text.y = element_text(size=sAx, color = "black"),
axis.text.x = element_text(size=sAx, color = "black",angle =45,hjust = 1),
axis.title.x = element_blank(),
axis.title.y = element_text(size=sTitle),
axis.line = element_line(size = sLine),
axis.ticks= element_line(size = sLine, color = 'black'),
axis.ticks.length = unit(.09, "cm"),
legend.position ="none")
View(Exp1.Models)
#Control graph
Exp1.Control = Exp1.Models[Exp1.Models$Condition != 'SF',]
View(Exp1.Control)
#Control graph
Exp1.Control = Exp1.Models[Exp1.Models$Condition != 'SF' & Exp1.Models$Classifier == "ISOF",]
View(Exp1.Control)
#Exp1 Control conditions
ggplot(Exp1.Control, aes(x = Model, y= Acc, fill = Model)) + geom_bar(stat="identity", color = "black", width = .5, size = sLine, position=position_dodge()) +
facet_grid(. ~ Condition) +
geom_linerange(stat="identity", aes(x = Model, ymin = Exp1.Control$Acc - Exp1.Control$SE, ymax=Exp1.Control$Acc + Exp1.Control$SE), size = sLine) +
scale_fill_manual(values=ModelCols) +
scale_y_continuous(breaks = seq(0, 1, by = .25), limits=c(0,1)) + geom_hline(yintercept= .5, linetype="dashed", size = sLine) +
xlab("Models") + ylab("Categorization Accuracy") + theme_classic() + theme(axis.text.y = element_text(size=sAx, color = "black"),
axis.text.x = element_text(size=sAx, color = "black",angle =45,hjust = 1),
axis.title.x = element_blank(),
axis.title.y = element_text(size=sTitle),
axis.line = element_line(size = sLine),
axis.ticks= element_line(size = sLine, color = 'black'),
axis.ticks.length = unit(.09, "cm"),
legend.position ="none",
strip.background = element_blank(),
strip.text.x = element_blank())
#Exp1 Control conditions
ggplot(Exp1.Control, aes(x = Model, y= Acc, fill = Model)) + geom_bar(stat="identity", color = "black", width = .5, size = sLine, position=position_dodge()) +
facet_grid(. ~ Condition) +
geom_linerange(stat="identity", aes(x = Model, ymin = Exp1.Control$CI_Low, ymax=Exp1.Control$CI_High), size = sLine) +
scale_fill_manual(values=ModelCols) +
scale_y_continuous(breaks = seq(0, 1, by = .25), limits=c(0,1)) + geom_hline(yintercept= .5, linetype="dashed", size = sLine) +
xlab("Models") + ylab("Categorization Accuracy") + theme_classic() + theme(axis.text.y = element_text(size=sAx, color = "black"),
axis.text.x = element_text(size=sAx, color = "black",angle =45,hjust = 1),
axis.title.x = element_blank(),
axis.title.y = element_text(size=sTitle),
axis.line = element_line(size = sLine),
axis.ticks= element_line(size = sLine, color = 'black'),
axis.ticks.length = unit(.09, "cm"),
legend.position ="none",
strip.background = element_blank(),
strip.text.x = element_blank())
rm(list = ls())
library(ggplot2)
library(reshape2)
setwd('C:/Users/vayze/Desktop/GitHub_Repos/LiMA')
load('Infant_Data/LiMA_data_all.RData')
load('Infant_Data/LiMA_Model_Data.RData')
ModelType= c( 'FF_IN', 'R_IN', 'FF_SN', 'R_SN')
ActualName= c( 'AlexNet-IN', 'ResNet-IN', 'AlexNet-SN', 'ResNet-SN')
for (mm in 1:length(ModelType)){
Exp1.Models[,1][Exp1.Models[,1] == ModelType[mm]] = ActualName[mm]
Exp2.Models[,1][Exp2.Models[,1] == ModelType[mm]] = ActualName[mm]
}
sLine = .7
sAx = 8
sTitle = 10
sPlot = 2.5
allCondNums = c(8, 2, 14, 9, 3, 15, 10, 4, 16, 11, 5, 17, 12, 6, 18, 13, 7, 19, 1)
colNums = c(1,7, 2, 8, 3, 9,4,10,5,11,6,12)
ModelCols = c('#39a055', '#8ccf8a', '#c81b1d', '#ec3f2f', '#fa7051', '#fc9e80')
#Exp 1 MODEL PLOTS
Exp1.Models = as.data.frame(Exp1.Models)
Exp1.Models$Model = factor(Exp1.Models$Model, levels = c( 'Infant', 'GBJ', 'GIST', 'AlexNet-IN', 'ResNet-IN', 'AlexNet-SN', 'ResNet-SN'))
Exp1.Models$Condition = factor(Exp1.Models$Condition, levels = c('SF','View', 'Size'))
Exp1.Models$Acc = as.numeric(as.character(Exp1.Models$Acc))
Exp1.Models$CI_Low = as.numeric(as.character(Exp1.Models$CI_Low))
Exp1.Models$CI_High = as.numeric(as.character(Exp1.Models$CI_High))
#Exp1.Models$roworder = allCondNums
#attach(Exp1.Models)
#Exp1.Models = Exp1.Models[order(roworder),]
#Exp1.Control$roworder = colNums
#attach(Exp1.Control)
#Exp1.Control = Exp1.Control[order(roworder),]
#For Exp1 SF condition; ISOF classifier
Exp1.SF = Exp1.Models[Exp1.Models$Condition == 'SF' & Exp1.Models$Classifier == "ISOF" | Exp1.Models$Classifier == "Infant",]
ggplot(Exp1.SF, aes(x = Model, y= Acc, fill = Model)) + geom_col(color = "black", width = .5, size = sLine) + scale_fill_manual(values=c('#32759b', ModelCols)) +
geom_linerange(aes(ymin =Exp1.SF$CI_Low, ymax=Exp1.SF$CI_High, x = Model), size = sLine) +
scale_y_continuous(breaks = seq(0, 1, by = .25), limits=c(0,1)) + geom_hline(yintercept= .5, linetype="dashed", size = sLine) +
xlab("Models") + ylab("Categorization Accuracy") + theme_classic() + theme(axis.text.y = element_text(size=sAx, color = "black"),
axis.text.x = element_text(size=sAx, color = "black",angle =45,hjust = 1),
axis.title.x = element_blank(),
axis.title.y = element_text(size=sTitle),
axis.line = element_line(size = sLine),
axis.ticks= element_line(size = sLine, color = 'black'),
axis.ticks.length = unit(.09, "cm"),
legend.position ="none")
#Control graph
Exp1.Control = Exp1.Models[Exp1.Models$Condition != 'SF' & Exp1.Models$Classifier == "ISOF",]
#Exp1 Control conditions
ggplot(Exp1.Control, aes(x = Model, y= Acc, fill = Model)) + geom_bar(stat="identity", color = "black", width = .5, size = sLine, position=position_dodge()) +
facet_grid(. ~ Condition) +
geom_linerange(stat="identity", aes(x = Model, ymin = Exp1.Control$CI_Low, ymax=Exp1.Control$CI_High), size = sLine) +
scale_fill_manual(values=ModelCols) +
scale_y_continuous(breaks = seq(0, 1, by = .25), limits=c(0,1)) + geom_hline(yintercept= .5, linetype="dashed", size = sLine) +
xlab("Models") + ylab("Categorization Accuracy") + theme_classic() + theme(axis.text.y = element_text(size=sAx, color = "black"),
axis.text.x = element_text(size=sAx, color = "black",angle =45,hjust = 1),
axis.title.x = element_blank(),
axis.title.y = element_text(size=sTitle),
axis.line = element_line(size = sLine),
axis.ticks= element_line(size = sLine, color = 'black'),
axis.ticks.length = unit(.09, "cm"),
legend.position ="none",
strip.background = element_blank(),
strip.text.x = element_blank())
Exp1.SF = Exp1.Models[Exp1.Models$Condition == 'SF' & Exp1.Models$Classifier == "ISOF" | Exp1.Models$Classifier == "Infant",]
ggplot(Exp1.SF, aes(x = Model, y= Acc, fill = Model)) + geom_col(color = "black", width = .5, size = sLine) + scale_fill_manual(values=c('#32759b', ModelCols)) +
geom_linerange(aes(ymin =Exp1.SF$CI_Low, ymax=Exp1.SF$CI_High, x = Model), size = sLine) +
scale_y_continuous(breaks = seq(0, 1, by = .25), limits=c(0,1)) + geom_hline(yintercept= .5, linetype="dashed", size = sLine) +
xlab("Models") + ylab("Categorization Accuracy") + theme_classic() + theme(axis.text.y = element_text(size=sAx, color = "black"),
axis.text.x = element_text(size=sAx, color = "black",angle =45,hjust = 1),
axis.title.x = element_blank(),
axis.title.y = element_text(size=sTitle),
axis.line = element_line(size = sLine),
axis.ticks= element_line(size = sLine, color = 'black'),
axis.ticks.length = unit(.09, "cm"),
legend.position ="none")
ggsave(filename =  'Infant_Data/Figures/Exp1_models_SF.png', plot = last_plot(), dpi = 300,width =3, height = 3)
#Control graph
Exp1.Control = Exp1.Models[Exp1.Models$Condition != 'SF' & Exp1.Models$Classifier == "ISOF",]
#Exp1 Control conditions
ggplot(Exp1.Control, aes(x = Model, y= Acc, fill = Model)) + geom_bar(stat="identity", color = "black", width = .5, size = sLine, position=position_dodge()) +
facet_grid(. ~ Condition) +
geom_linerange(stat="identity", aes(x = Model, ymin = Exp1.Control$CI_Low, ymax=Exp1.Control$CI_High), size = sLine) +
scale_fill_manual(values=ModelCols) +
scale_y_continuous(breaks = seq(0, 1, by = .25), limits=c(0,1)) + geom_hline(yintercept= .5, linetype="dashed", size = sLine) +
xlab("Models") + ylab("Categorization Accuracy") + theme_classic() + theme(axis.text.y = element_text(size=sAx, color = "black"),
axis.text.x = element_text(size=sAx, color = "black",angle =45,hjust = 1),
axis.title.x = element_blank(),
axis.title.y = element_text(size=sTitle),
axis.line = element_line(size = sLine),
axis.ticks= element_line(size = sLine, color = 'black'),
axis.ticks.length = unit(.09, "cm"),
legend.position ="none",
strip.background = element_blank(),
strip.text.x = element_blank())
ggsave(filename =  'Infant_Data/Figures/Exp1_models_Controls.png', plot = last_plot(), dpi = 300,width =6, height = 3)
Exp2.Models = as.data.frame(Exp2.Models)
Exp2.Models$Model = factor(Exp2.Models$Model, levels = c( 'Infant', 'GBJ', 'GIST', 'AlexNet-IN', 'ResNet-IN', 'AlexNet-SN', 'ResNet-SN'))
Exp2.Models$Condition = factor(Exp2.Models$Condition, levels = c( 'Diff_SF', 'Same_SF', 'Diff_Size'))
Exp2.Models$Acc = as.numeric(as.character(Exp2.Models$Acc))
Exp2.Models$SE = as.numeric(as.character(Exp2.Models$SE))
Exp2.Models$CI_Low = as.numeric(as.character(Exp2.Models$CI_Low))
Exp2.Models$CI_High = as.numeric(as.character(Exp2.Models$CI_High))
#For Exp1 SF condition; ISOF classifier
Exp2.SF = Exp2.Models[Exp2.Models$Condition == 'SF' & Exp2.Models$Classifier == "ISOF" | Exp2.Models$Classifier == "Infant",]
ggplot(Exp2.SF, aes(x = Model, y= Acc, fill = Model)) + geom_col(color = "black", width = .5, size = sLine) + scale_fill_manual(values=c('#32759b', ModelCols)) +
geom_linerange(aes(ymin =Exp2.SF$CI_Low, ymax=Exp2.SF$CI_High, x = Model), size = sLine) +
scale_y_continuous(breaks = seq(0, 1, by = .25), limits=c(0,1)) + geom_hline(yintercept= .5, linetype="dashed", size = sLine) +
xlab("Models") + ylab("Categorization Accuracy") + theme_classic() + theme(axis.text.y = element_text(size=sAx, color = "black"),
axis.text.x = element_text(size=sAx, color = "black",angle =45,hjust = 1),
axis.title.x = element_blank(),
axis.title.y = element_text(size=sTitle),
axis.line = element_line(size = sLine),
axis.ticks= element_line(size = sLine, color = 'black'),
axis.ticks.length = unit(.09, "cm"),
legend.position ="none")
ggsave(filename =  'Infant_Data/Figures/Exp2_models_SF.png', plot = last_plot(), dpi = 300,width =3, height = 3)
#Control graph
Exp2.Control = Exp2.Models[Exp2.Models$Condition != 'SF' & Exp2.Models$Classifier == "ISOF",]
#Exp2 Control conditions
ggplot(Exp2.Control, aes(x = Model, y= Acc, fill = Model)) + geom_bar(stat="identity", color = "black", width = .5, size = sLine, position=position_dodge()) +
facet_grid(. ~ Condition) +
geom_linerange(stat="identity", aes(x = Model, ymin = Exp2.Control$CI_Low, ymax=Exp2.Control$CI_High), size = sLine) +
scale_fill_manual(values=ModelCols) +
scale_y_continuous(breaks = seq(0, 1, by = .25), limits=c(0,1)) + geom_hline(yintercept= .5, linetype="dashed", size = sLine) +
xlab("Models") + ylab("Categorization Accuracy") + theme_classic() + theme(axis.text.y = element_text(size=sAx, color = "black"),
axis.text.x = element_text(size=sAx, color = "black",angle =45,hjust = 1),
axis.title.x = element_blank(),
axis.title.y = element_text(size=sTitle),
axis.line = element_line(size = sLine),
axis.ticks= element_line(size = sLine, color = 'black'),
axis.ticks.length = unit(.09, "cm"),
legend.position ="none",
strip.background = element_blank(),
strip.text.x = element_blank())
ggsave(filename =  'Infant_Data/Figures/Exp2_models_Controls.png', plot = last_plot(), dpi = 300,width =6, height = 3)
Exp2.Models = as.data.frame(Exp2.Models)
Exp2.Models$Model = factor(Exp2.Models$Model, levels = c( 'Infant', 'GBJ', 'GIST', 'AlexNet-IN', 'ResNet-IN', 'AlexNet-SN', 'ResNet-SN'))
Exp2.Models$Condition = factor(Exp2.Models$Condition, levels = c( 'Diff_SF', 'Same_SF', 'Diff_Size'))
Exp2.Models$Acc = as.numeric(as.character(Exp2.Models$Acc))
Exp2.Models$SE = as.numeric(as.character(Exp2.Models$SE))
Exp2.Models$CI_Low = as.numeric(as.character(Exp2.Models$CI_Low))
Exp2.Models$CI_High = as.numeric(as.character(Exp2.Models$CI_High))
Exp2.Models = as.data.frame(Exp2.Models)
Exp2.Models$Model = factor(Exp2.Models$Model, levels = c( 'Infant', 'GBJ', 'GIST', 'AlexNet-IN', 'ResNet-IN', 'AlexNet-SN', 'ResNet-SN'))
Exp2.Models$Condition = factor(Exp2.Models$Condition, levels = c( 'Diff_SF', 'Same_SF', 'Diff_Size'))
Exp2.Models$Acc = as.numeric(as.character(Exp2.Models$Acc))
Exp2.Models$CI_Low = as.numeric(as.character(Exp2.Models$CI_Low))
Exp2.Models$CI_High = as.numeric(as.character(Exp2.Models$CI_High))
#For Exp1 SF condition; ISOF classifier
Exp2.SF = Exp2.Models[Exp2.Models$Condition == 'SF' & Exp2.Models$Classifier == "ISOF" | Exp2.Models$Classifier == "Infant",]
ggplot(Exp2.SF, aes(x = Model, y= Acc, fill = Model)) + geom_col(color = "black", width = .5, size = sLine) + scale_fill_manual(values=c('#32759b', ModelCols)) +
geom_linerange(aes(ymin =Exp2.SF$CI_Low, ymax=Exp2.SF$CI_High, x = Model), size = sLine) +
scale_y_continuous(breaks = seq(0, 1, by = .25), limits=c(0,1)) + geom_hline(yintercept= .5, linetype="dashed", size = sLine) +
xlab("Models") + ylab("Categorization Accuracy") + theme_classic() + theme(axis.text.y = element_text(size=sAx, color = "black"),
axis.text.x = element_text(size=sAx, color = "black",angle =45,hjust = 1),
axis.title.x = element_blank(),
axis.title.y = element_text(size=sTitle),
axis.line = element_line(size = sLine),
axis.ticks= element_line(size = sLine, color = 'black'),
axis.ticks.length = unit(.09, "cm"),
legend.position ="none")
View(Exp2.SF)
View(Exp2.Models)
load('Infant_Data/LiMA_Model_Data.RData')
View(Exp2.Models)
Exp2.Models = as.data.frame(Exp2.Models)
load('Infant_Data/LiMA_Model_Data.RData')
for (mm in 1:length(ModelType)){
Exp1.Models[,1][Exp1.Models[,1] == ModelType[mm]] = ActualName[mm]
Exp2.Models[,1][Exp2.Models[,1] == ModelType[mm]] = ActualName[mm]
}
Exp2.Models = as.data.frame(Exp2.Models)
Exp2.Models$Model = factor(Exp2.Models$Model, levels = c( 'Infant', 'GBJ', 'GIST', 'AlexNet-IN', 'ResNet-IN', 'AlexNet-SN', 'ResNet-SN'))
Exp2.Models$Condition = factor(Exp2.Models$Condition, levels = c( 'Diff_SF', 'Same_SF', 'Diff_Size'))
Exp2.Models$Acc = as.numeric(as.character(Exp2.Models$Acc))
Exp2.Models$CI_Low = as.numeric(as.character(Exp2.Models$CI_Low))
Exp2.Models$CI_High = as.numeric(as.character(Exp2.Models$CI_High))
Exp2.Models = as.data.frame(Exp2.Models)
Exp2.Models$Model = factor(Exp2.Models$Model, levels = c( 'Infant', 'GBJ', 'GIST', 'AlexNet-IN', 'ResNet-IN', 'AlexNet-SN', 'ResNet-SN'))
ModelType= c( 'FF_IN', 'R_IN', 'FF_SN', 'R_SN')
ActualName= c( 'AlexNet-IN', 'ResNet-IN', 'AlexNet-SN', 'ResNet-SN')
for (mm in 1:length(ModelType)){
Exp1.Models[,1][Exp1.Models[,1] == ModelType[mm]] = ActualName[mm]
Exp2.Models[,1][Exp2.Models[,1] == ModelType[mm]] = ActualName[mm]
}
ModelType= c( 'FF_IN', 'R_IN', 'FF_SN', 'R_SN')
ActualName= c( 'AlexNet-IN', 'ResNet-IN', 'AlexNet-SN', 'ResNet-SN')
for (mm in 1:length(ModelType)){
Exp1.Models[,1][Exp1.Models[,1] == ModelType[mm]] = ActualName[mm]
Exp2.Models[,1][Exp2.Models[,1] == ModelType[mm]] = ActualName[mm]
}
sLine = .7
sAx = 8
sTitle = 10
sPlot = 2.5
allCondNums = c(8, 2, 14, 9, 3, 15, 10, 4, 16, 11, 5, 17, 12, 6, 18, 13, 7, 19, 1)
colNums = c(1,7, 2, 8, 3, 9,4,10,5,11,6,12)
ModelCols = c('#39a055', '#8ccf8a', '#c81b1d', '#ec3f2f', '#fa7051', '#fc9e80')
#Exp 1 MODEL PLOTS
Exp1.Models = as.data.frame(Exp1.Models)
Exp1.Models$Model = factor(Exp1.Models$Model, levels = c( 'Infant', 'GBJ', 'GIST', 'AlexNet-IN', 'ResNet-IN', 'AlexNet-SN', 'ResNet-SN'))
Exp1.Models$Condition = factor(Exp1.Models$Condition, levels = c('SF','View', 'Size'))
Exp1.Models$Acc = as.numeric(as.character(Exp1.Models$Acc))
Exp1.Models$CI_Low = as.numeric(as.character(Exp1.Models$CI_Low))
Exp1.Models$CI_High = as.numeric(as.character(Exp1.Models$CI_High))
#Exp1.Models$roworder = allCondNums
#attach(Exp1.Models)
#Exp1.Models = Exp1.Models[order(roworder),]
#Exp1.Control$roworder = colNums
#attach(Exp1.Control)
#Exp1.Control = Exp1.Control[order(roworder),]
#For Exp1 SF condition; ISOF classifier
Exp1.SF = Exp1.Models[Exp1.Models$Condition == 'SF' & Exp1.Models$Classifier == "ISOF" | Exp1.Models$Classifier == "Infant",]
ggplot(Exp1.SF, aes(x = Model, y= Acc, fill = Model)) + geom_col(color = "black", width = .5, size = sLine) + scale_fill_manual(values=c('#32759b', ModelCols)) +
geom_linerange(aes(ymin =Exp1.SF$CI_Low, ymax=Exp1.SF$CI_High, x = Model), size = sLine) +
scale_y_continuous(breaks = seq(0, 1, by = .25), limits=c(0,1)) + geom_hline(yintercept= .5, linetype="dashed", size = sLine) +
xlab("Models") + ylab("Categorization Accuracy") + theme_classic() + theme(axis.text.y = element_text(size=sAx, color = "black"),
axis.text.x = element_text(size=sAx, color = "black",angle =45,hjust = 1),
axis.title.x = element_blank(),
axis.title.y = element_text(size=sTitle),
axis.line = element_line(size = sLine),
axis.ticks= element_line(size = sLine, color = 'black'),
axis.ticks.length = unit(.09, "cm"),
legend.position ="none")
ggsave(filename =  'Infant_Data/Figures/Exp1_models_SF.png', plot = last_plot(), dpi = 300,width =3, height = 3)
#Control graph
Exp1.Control = Exp1.Models[Exp1.Models$Condition != 'SF' & Exp1.Models$Classifier == "ISOF",]
#Exp1 Control conditions
ggplot(Exp1.Control, aes(x = Model, y= Acc, fill = Model)) + geom_bar(stat="identity", color = "black", width = .5, size = sLine, position=position_dodge()) +
facet_grid(. ~ Condition) +
geom_linerange(stat="identity", aes(x = Model, ymin = Exp1.Control$CI_Low, ymax=Exp1.Control$CI_High), size = sLine) +
scale_fill_manual(values=ModelCols) +
scale_y_continuous(breaks = seq(0, 1, by = .25), limits=c(0,1)) + geom_hline(yintercept= .5, linetype="dashed", size = sLine) +
xlab("Models") + ylab("Categorization Accuracy") + theme_classic() + theme(axis.text.y = element_text(size=sAx, color = "black"),
axis.text.x = element_text(size=sAx, color = "black",angle =45,hjust = 1),
axis.title.x = element_blank(),
axis.title.y = element_text(size=sTitle),
axis.line = element_line(size = sLine),
axis.ticks= element_line(size = sLine, color = 'black'),
axis.ticks.length = unit(.09, "cm"),
legend.position ="none",
strip.background = element_blank(),
strip.text.x = element_blank())
ggsave(filename =  'Infant_Data/Figures/Exp1_models_Controls.png', plot = last_plot(), dpi = 300,width =6, height = 3)
#Experiment 2 figures
Exp2.Models = as.data.frame(Exp2.Models)
Exp2.Models$Model = factor(Exp2.Models$Model, levels = c( 'Infant', 'GBJ', 'GIST', 'AlexNet-IN', 'ResNet-IN', 'AlexNet-SN', 'ResNet-SN'))
Exp2.Models$Condition = factor(Exp2.Models$Condition, levels = c('SF','View', 'Size'))
Exp2.Models$Acc = as.numeric(as.character(Exp2.Models$Acc))
Exp2.Models$CI_Low = as.numeric(as.character(Exp2.Models$CI_Low))
Exp2.Models$CI_High = as.numeric(as.character(Exp2.Models$CI_High))
#For Exp1 SF condition; ISOF classifier
Exp2.SF = Exp2.Models[Exp2.Models$Condition == 'SF' & Exp2.Models$Classifier == "ISOF" | Exp2.Models$Classifier == "Infant",]
ggplot(Exp2.SF, aes(x = Model, y= Acc, fill = Model)) + geom_col(color = "black", width = .5, size = sLine) + scale_fill_manual(values=c('#32759b', ModelCols)) +
geom_linerange(aes(ymin =Exp2.SF$CI_Low, ymax=Exp2.SF$CI_High, x = Model), size = sLine) +
scale_y_continuous(breaks = seq(0, 1, by = .25), limits=c(0,1)) + geom_hline(yintercept= .5, linetype="dashed", size = sLine) +
xlab("Models") + ylab("Categorization Accuracy") + theme_classic() + theme(axis.text.y = element_text(size=sAx, color = "black"),
axis.text.x = element_text(size=sAx, color = "black",angle =45,hjust = 1),
axis.title.x = element_blank(),
axis.title.y = element_text(size=sTitle),
axis.line = element_line(size = sLine),
axis.ticks= element_line(size = sLine, color = 'black'),
axis.ticks.length = unit(.09, "cm"),
legend.position ="none")
load('Infant_Data/LiMA_Model_Data.RData')
ModelType= c( 'FF_IN', 'R_IN', 'FF_SN', 'R_SN')
ActualName= c( 'AlexNet-IN', 'ResNet-IN', 'AlexNet-SN', 'ResNet-SN')
for (mm in 1:length(ModelType)){
Exp1.Models[,1][Exp1.Models[,1] == ModelType[mm]] = ActualName[mm]
Exp2.Models[,1][Exp2.Models[,1] == ModelType[mm]] = ActualName[mm]
}
Exp2.Models = as.data.frame(Exp2.Models)
Exp2.Models$Model = factor(Exp2.Models$Model, levels = c( 'Infant', 'GBJ', 'GIST', 'AlexNet-IN', 'ResNet-IN', 'AlexNet-SN', 'ResNet-SN'))
Exp2.Models$Condition = factor(Exp2.Models$Condition, levels = c('SF','View', 'Size'))
Exp2.Models$Acc = as.numeric(as.character(Exp2.Models$Acc))
Exp2.Models$CI_Low = as.numeric(as.character(Exp2.Models$CI_Low))
Exp2.Models$CI_High = as.numeric(as.character(Exp2.Models$CI_High))
#For Exp1 SF condition; ISOF classifier
Exp2.SF = Exp2.Models[Exp2.Models$Condition == 'SF' & Exp2.Models$Classifier == "ISOF" | Exp2.Models$Classifier == "Infant",]
ggplot(Exp2.SF, aes(x = Model, y= Acc, fill = Model)) + geom_col(color = "black", width = .5, size = sLine) + scale_fill_manual(values=c('#32759b', ModelCols)) +
geom_linerange(aes(ymin =Exp2.SF$CI_Low, ymax=Exp2.SF$CI_High, x = Model), size = sLine) +
scale_y_continuous(breaks = seq(0, 1, by = .25), limits=c(0,1)) + geom_hline(yintercept= .5, linetype="dashed", size = sLine) +
xlab("Models") + ylab("Categorization Accuracy") + theme_classic() + theme(axis.text.y = element_text(size=sAx, color = "black"),
axis.text.x = element_text(size=sAx, color = "black",angle =45,hjust = 1),
axis.title.x = element_blank(),
axis.title.y = element_text(size=sTitle),
axis.line = element_line(size = sLine),
axis.ticks= element_line(size = sLine, color = 'black'),
axis.ticks.length = unit(.09, "cm"),
legend.position ="none")
ggsave(filename =  'Infant_Data/Figures/Exp2_models_SF.png', plot = last_plot(), dpi = 300,width =3, height = 3)
#Control graph
Exp2.Control = Exp2.Models[Exp2.Models$Condition != 'SF' & Exp2.Models$Classifier == "ISOF",]
#Exp2 Control conditions
ggplot(Exp2.Control, aes(x = Model, y= Acc, fill = Model)) + geom_bar(stat="identity", color = "black", width = .5, size = sLine, position=position_dodge()) +
facet_grid(. ~ Condition) +
geom_linerange(stat="identity", aes(x = Model, ymin = Exp2.Control$CI_Low, ymax=Exp2.Control$CI_High), size = sLine) +
scale_fill_manual(values=ModelCols) +
scale_y_continuous(breaks = seq(0, 1, by = .25), limits=c(0,1)) + geom_hline(yintercept= .5, linetype="dashed", size = sLine) +
xlab("Models") + ylab("Categorization Accuracy") + theme_classic() + theme(axis.text.y = element_text(size=sAx, color = "black"),
axis.text.x = element_text(size=sAx, color = "black",angle =45,hjust = 1),
axis.title.x = element_blank(),
axis.title.y = element_text(size=sTitle),
axis.line = element_line(size = sLine),
axis.ticks= element_line(size = sLine, color = 'black'),
axis.ticks.length = unit(.09, "cm"),
legend.position ="none",
strip.background = element_blank(),
strip.text.x = element_blank())
View(Exp2.Models)
ggsave(filename =  'Infant_Data/Figures/Exp2_models_Controls.png', plot = last_plot(), dpi = 300,width =6, height = 3)
